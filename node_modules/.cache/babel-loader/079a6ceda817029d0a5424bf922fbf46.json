{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\depot\\\\eth_swap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\depot\\\\eth_swap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\depot\\\\eth_swap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\depot\\\\eth_swap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\depot\\\\eth_swap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\depot\\\\eth_swap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\depot\\\\eth_swap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\depot\\\\eth_swap\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react'; //import logo from '../logo.png';\n\nimport Web3 from 'web3';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockChainData\",\n    value: function () {\n      var _loadBlockChainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return window.web3;\n\n              case 2:\n                web3 = _context2.sent;\n                _context2.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context2.sent;\n                console.log(accounts);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadBlockChainData() {\n        return _loadBlockChainData.apply(this, arguments);\n      }\n\n      return loadBlockChainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var provider;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (window.ethereum) {\n                  window.web3 = new Web3(window.ethereum);\n                  window.alert('web3 instance injected, using Local web3');\n                } else {\n                  window.alert('Non-Ethereum browser, detected install Metamask !'); // Fallback to localhost if no web3 injection. We've configured this to\n                  // use the development console's port by default.\n\n                  provider = new Web3.providers.HttpProvider('http://127.0.0.1:8545');\n                  window.web3 = new Web3(provider);\n                }\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Dapp University\")), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Hello word\")))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\depot\\eth_swap\\src\\components\\App.js"],"names":["React","Component","Web3","App","loadWeb3","window","web3","eth","getAccounts","accounts","console","log","ethereum","alert","provider","providers","HttpProvider"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;;;;;;uBAKI,KAAKC,QAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAMmBC,MAAM,CAACC,I;;;AAAtBA,gBAAAA,I;;uBACeA,IAAI,CAACC,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AAEJC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKJ,oBAAGJ,MAAM,CAACO,QAAV,EAAmB;AAEfP,kBAAAA,MAAM,CAACC,IAAP,GAAc,IAAIJ,IAAJ,CAASG,MAAM,CAACO,QAAhB,CAAd;AACAP,kBAAAA,MAAM,CAACQ,KAAP,CAAa,0CAAb;AAGH,iBAND,MAMK;AAEDR,kBAAAA,MAAM,CAACQ,KAAP,CAAa,mDAAb,EAFC,CAGF;AACA;;AAEKC,kBAAAA,QANH,GAMc,IAAIZ,IAAI,CAACa,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CANd;AAODX,kBAAAA,MAAM,CAACC,IAAP,GAAe,IAAIJ,IAAJ,CAASY,QAAT,CAAf;AAEH;;;;;;;;;;;;;;;;;;6BAGM;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,qCADZ;AAEE,QAAA,IAAI,EAAC,wCAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,EAWE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,SAAS,EAAC,8BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,CADF,CAXF,CADF;AAuBD;;;;EA7Deb,S;;AAgElB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\r\n//import logo from '../logo.png';\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  \r\n  async componentWillMount(){\r\n\r\n    await this.loadWeb3();\r\n    //await this.loadBlockChainData()\r\n  }\r\n  \r\n  async loadBlockChainData(){\r\n \r\n        const web3   = await window.web3     \r\n        var accounts = await web3.eth.getAccounts()\r\n\r\n        console.log(accounts);             \r\n  }\r\n\r\n  async loadWeb3(){\r\n\r\n    if(window.ethereum){       \r\n      \r\n        window.web3 = new Web3(window.ethereum)\r\n        window.alert('web3 instance injected, using Local web3');        \r\n        \r\n\r\n    }else{\r\n      \r\n        window.alert('Non-Ethereum browser, detected install Metamask !');\r\n       // Fallback to localhost if no web3 injection. We've configured this to\r\n       // use the development console's port by default.\r\n     \r\n        var provider = new Web3.providers.HttpProvider('http://127.0.0.1:8545')\r\n        window.web3  = new Web3(provider)   \r\n      \r\n    }\r\n     \r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a\r\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n            href=\"http://www.dappuniversity.com/bootcamp\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Dapp University\r\n          </a>\r\n        </nav>\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n              <div className=\"content mr-auto ml-auto\">\r\n                Hello word\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}